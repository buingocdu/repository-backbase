<?xml version="1.0" encoding="UTF-8"?><project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.backbase.buildingblocks</groupId>
    <artifactId>backbase-openapi-spec-starter-parent</artifactId>
    <version>16.0.1</version>
  </parent>
  <groupId>com.backbase.dbs.accesscontrol</groupId>
  <artifactId>access-control-openapi-spec</artifactId>
  <version>3.3.0</version>
  <properties>
    <versioned-filename-spec-dir>${project.build.directory}/api</versioned-filename-spec-dir>
    <boat.version>0.17.0</boat.version>
    <ignored-lint-rules>219,215,218,166,136,174,235,107,171,224,143,151,129,146,147,172,145,115,132,120,134,183,154,105,104,130,118,110,153,101,176,150,116,M009,H002,M010,H001,M008,S005,S006,S007,M011</ignored-lint-rules>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>common-types</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>initialize</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/specs</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>unpack-common-types-lib-in-ac</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>com.backbase.buildingblocks</groupId>
                  <artifactId>common-types</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/specs/access-control/lib</outputDirectory>
                  <excludes>META-INF/**,com/**</excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-common-types-lib-in-ag</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>com.backbase.buildingblocks</groupId>
                  <artifactId>common-types</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/specs/accessgroup-integration-service/lib</outputDirectory>
                  <excludes>META-INF/**,com/**</excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-common-types-lib-in-le</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>com.backbase.buildingblocks</groupId>
                  <artifactId>common-types</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/specs/legalentity-integration-service/lib</outputDirectory>
                  <excludes>META-INF/**,com/**</excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.backbase.oss</groupId>
        <artifactId>boat-maven-plugin</artifactId>
        <version>${boat.version}</version>
        <executions>
          <execution>
            <id>bundle-specs-in-ac</id>
            <!-- Other plugins down the line want to reference the
						bundled specs using a hard coded filename-->
            <phase>generate-sources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <input>${project.build.directory}/specs/access-control</input>
              <output>${versioned-filename-spec-dir}/access-control</output>
              <versionFileName>true</versionFileName>
            </configuration>
          </execution>
          <execution>
            <id>bundle-specs-in-ag</id>
            <!-- Other plugins down the line want to reference the
						bundled specs using a hard coded filename-->
            <phase>generate-sources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <input>${project.build.directory}/specs/accessgroup-integration-service</input>
              <output>${versioned-filename-spec-dir}/accessgroup-integration-service</output>
              <versionFileName>true</versionFileName>
            </configuration>
          </execution>
          <execution>
            <id>bundle-specs-in-le</id>
            <!-- Other plugins down the line want to reference the
						bundled specs using a hard coded filename-->
            <phase>generate-sources</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <input>${project.build.directory}/specs/legalentity-integration-service</input>
              <output>${versioned-filename-spec-dir}/legalentity-integration-service</output>
              <versionFileName>true</versionFileName>
            </configuration>
          </execution>
          <execution>
            <id>validate-api-specs-in-ac</id>
            <phase>package</phase>
            <goals>
              <goal>lint</goal>
            </goals>
            <configuration>
              <inputSpec>${versioned-filename-spec-dir}/access-control</inputSpec>
              <output>${project.build.directory}/boat-lint-reports</output>
              <writeLintReport>true</writeLintReport>
              <ignoreRules>${ignored-lint-rules}</ignoreRules>
            </configuration>
          </execution>
          <execution>
            <id>validate-api-specs-in-ag</id>
            <phase>package</phase>
            <goals>
              <goal>lint</goal>
            </goals>
            <configuration>
              <inputSpec>${versioned-filename-spec-dir}/accessgroup-integration-service</inputSpec>
              <output>${project.build.directory}/boat-lint-reports</output>
              <writeLintReport>true</writeLintReport>
              <ignoreRules>${ignored-lint-rules}</ignoreRules>
            </configuration>
          </execution>
          <execution>
            <id>validate-api-specs-in-le</id>
            <phase>package</phase>
            <goals>
              <goal>lint</goal>
            </goals>
            <configuration>
              <inputSpec>${versioned-filename-spec-dir}/legalentity-integration-service</inputSpec>
              <output>${project.build.directory}/boat-lint-reports</output>
              <writeLintReport>true</writeLintReport>
              <ignoreRules>${ignored-lint-rules}</ignoreRules>
            </configuration>
          </execution>
          <execution>
            <id>generate-docs-in-ac-client-v3</id>
            <phase>package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/specs/access-control/access-control-client-api-v3.yaml</inputSpec>
              <output>${project.build.directory}/documentation/access-control-client-v3</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
          <execution>
            <id>generate-docs-in-ac-service-v3</id>
            <phase>package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/specs/access-control/access-control-service-api-v3.yaml</inputSpec>
              <output>${project.build.directory}/documentation/access-control-service-v3</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
          <execution>
            <id>generate-docs-in-ac-le-integration</id>
            <phase>package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/specs/access-control/legalentity-integration-outbound-api-v2.yaml</inputSpec>
              <output>${project.build.directory}/documentation/legalentity-integration-outbound</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
          <execution>
            <id>generate-docs-in-ag-integration-v3</id>
            <phase>package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/specs/accessgroup-integration-service/accessgroup-integration-inbound-api-v3.yaml</inputSpec>
              <output>${project.build.directory}/documentation/accessgroup-integration-service-v3</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
          <execution>
            <id>generate-docs-in-le</id>
            <phase>package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/specs/legalentity-integration-service/legalentity-integration-inbound-api-v2.yaml</inputSpec>
              <output>${project.build.directory}/documentation/legalentity-integration-service</output>
              <generatorName>html2</generatorName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
        </executions>
        <configuration/>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/packing-script.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>