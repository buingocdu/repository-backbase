<?xml version="1.0" encoding="UTF-8"?><project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-dependencies</artifactId>
    <version>3.4.6</version>
    <relativePath/>
  </parent>
  <groupId>com.backbase.dbs.accesscontrol</groupId>
  <artifactId>auth-security-dbs-accesscontrol</artifactId>
  <version>6.7.0-SNAPSHOT</version>
  <name>auth-security-dbs-accesscontrol</name>
  <description>Backbase :: Implementation of auth-security-api</description>
  <organization>
    <name>Backbase B.V.</name>
    <url>http://www.backbase.com</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  <properties>
    <!-- The maven-compiler-plugin gives much better error messages with Javac instead of OpenJDK 11 javax.tools -->
    <maven.compiler.forceJavacCompilerUse>true</maven.compiler.forceJavacCompilerUse>
    <skip.integration.tests>false</skip.integration.tests>
    <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
    <boat.version>0.17.63</boat.version>
    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <sonar.checkstyle.filters>&lt;module name="BeforeExecutionExclusionFileFilter"&gt;
        &lt;property name="fileNamePattern" value="module\-info\.java$" /&gt;
    &lt;/module&gt;</sonar.checkstyle.filters>
    <skip.unit.tests>false</skip.unit.tests>
    <flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
    <sonar-maven-plugin.version>3.11.0.3922</sonar-maven-plugin.version>
    <sonar.exclusions>target/checkout/**,src/test/**</sonar.exclusions>
    <sonar.tests>${project.basedir}/src/test/</sonar.tests>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <permission-check-service-api.version>1.8.0</permission-check-service-api.version>
    <maven-scm-provider-gitexe.version>2.0.1</maven-scm-provider-gitexe.version>
    <sonar.java.binaries>target/classes/</sonar.java.binaries>
    <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml,${project.reporting.outputDirectory}/jacoco-it/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <wagon.serverId>backbase</wagon.serverId>
    <!-- Sonar -->
    <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <codegen.generated-sources-dir>${project.build.directory}/generated-sources</codegen.generated-sources-dir>
    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <coverage.reports.dir>${project.build.directory}/coverage-reports</coverage.reports.dir>
    <sonar.sources>${project.basedir}/src/main/</sonar.sources>
    <wagon-maven-plugin.version>2.0.2</wagon-maven-plugin.version>
    <jacoco.version>0.8.12</jacoco.version>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <backbase.specs.url>https://repo.backbase.com/specs</backbase.specs.url>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <access-control-service-api.version>3.14.0</access-control-service-api.version>
    <archunit.skip>true</archunit.skip>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>33.4.8-jre</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <!-- TODO This is temporary, to be removed in 2025.10 -->
      <groupId>com.backbase.buildingblocks</groupId>
      <artifactId>service-sdk-common-core</artifactId>
      <version>18.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- json-smart is a transitive dependency from spring-boot-starter-test, bumped up to 2.5.2 due to vulnerabilities in 2.5.1 -->
    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart</artifactId>
      <version>2.5.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <updatePomFile>true</updatePomFile>
            <keepCommentsInPom>true</keepCommentsInPom>
            <pomElements>
              <name>keep</name>
              <parent>keep</parent>
              <description>keep</description>
              <organization>keep</organization>
              <developers>keep</developers>
              <scm>remove</scm>
              <distributionManagement>remove</distributionManagement>
              <properties>keep</properties>
              <dependencyManagement>keep</dependencyManagement>
              <dependencies>keep</dependencies>
              <build>keep</build>
              <profiles>keep</profiles>
            </pomElements>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <parameters>true</parameters>
            <useIncrementalCompilation>false</useIncrementalCompilation>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>wagon-maven-plugin</artifactId>
        <version>${wagon-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>download-access-control-api-spec</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>download-single</goal>
            </goals>
            <configuration>
              <fromFile>access-control-service-api-v${access-control-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
          <execution>
            <id>download-permission-check-service-api-spec</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>download-single</goal>
            </goals>
            <configuration>
              <url>https://repo.backbase.com/artifactory/specs-snapshots/access-control</url>
              <fromFile>permission-check-service-api-v${permission-check-service-api.version}.yaml</fromFile>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <url>${backbase.specs.url}/access-control</url>
          <toDir>${project.build.directory}/openapi</toDir>
          <skipIfExists>true</skipIfExists>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.backbase.oss</groupId>
        <artifactId>boat-maven-plugin</artifactId>
        <version>${boat.version}</version>
        <executions>
          <execution>
            <id>generate-access-control-service-api-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-rest-template-embedded</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/openapi/access-control-service-api-v${access-control-service-api.version}.yaml</inputSpec>
              <apiPackage>com.backbase.dbs.accesscontrol.api.client.v3</apiPackage>
              <modelPackage>com.backbase.dbs.accesscontrol.api.client.v3.model</modelPackage>
              <configOptions>
                <containerDefaultToNull>true</containerDefaultToNull>
                <openApiNullable>false</openApiNullable>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-permission-check-api-code-v1</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-rest-template-embedded</goal>
            </goals>
            <configuration>
              <inputSpec>${project.build.directory}/openapi/permission-check-service-api-v${permission-check-service-api.version}.yaml</inputSpec>
              <apiPackage>com.backbase.dbs.accesscontrol.api.client.v1</apiPackage>
              <modelPackage>com.backbase.dbs.accesscontrol.api.client.v1</modelPackage>
              <configOptions>
                <containerDefaultToNull>true</containerDefaultToNull>
                <openApiNullable>false</openApiNullable>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <inherited>false</inherited>
          </execution>
          <!-- clean flattened pom -->
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <inherited>false</inherited>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--Failsafe plugin - for running integration tests-->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <!-- Sets the VM argument line used when integration tests are run. -->
              <!-- Since Version 2.17 using @{...} allows late replacement of properties when the plugin is
                            executed, so properties that have been modified by other plugins will be picked up correctly. -->
              <argLine>@{failsafeArgLine}</argLine>
              <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <doclint>none</doclint>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-api</artifactId>
            <version>${maven-scm-provider-gitexe.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>${maven-scm-provider-gitexe.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Surefire plugin - for running unit tests-->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <!-- Since Version 2.17 using @{...} allows late replacement of properties when the plugin is
                    executed, so properties that have been modified by other plugins will be picked up correctly. -->
          <argLine>@{surefireArgLine}</argLine>
          <skipTests>${skip.unit.tests}</skipTests>
          <!-- Excludes integration tests when unit tests are run. -->
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${coverage.reports.dir}/jacoco.exec</destFile>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${coverage.reports.dir}/jacoco.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${coverage.reports.dir}/jacoco-it.exec</destFile>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${coverage.reports.dir}/jacoco-it.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
    </plugins>
  </build>
</project>